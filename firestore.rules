rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection rules
    match /users/{userId} {
      // Users can read any user profile
      allow read: if request.auth != null;
      
      // Users can only write to their own profile
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Rooms collection rules
    match /rooms/{roomId} {
      // Users can read rooms they are part of
      allow read: if request.auth != null && 
        (resource.data.participant1Id == request.auth.uid || 
         resource.data.participant2Id == request.auth.uid);
      
      // Users can create rooms if they are a participant
      allow create: if request.auth != null && 
        (request.resource.data.participant1Id == request.auth.uid || 
         request.resource.data.participant2Id == request.auth.uid);
      
      // Users can update rooms they are part of
      allow update: if request.auth != null && 
        (resource.data.participant1Id == request.auth.uid || 
         resource.data.participant2Id == request.auth.uid);
    }
    
    // Chat messages collection rules
    match /chatMessages/{messageId} {
      // Function to check if user is a participant in the room
      function isRoomParticipant(roomId) {
        let room = get(/databases/$(database)/documents/rooms/$(roomId)).data;
        return room.participant1Id == request.auth.uid || 
               room.participant2Id == request.auth.uid;
      }
      
      // Users can read messages in rooms they are part of
      allow read: if request.auth != null && 
        isRoomParticipant(resource.data.roomId);
      
      // Users can create messages in rooms they are part of
      allow create: if request.auth != null && 
        isRoomParticipant(request.resource.data.roomId) &&
        request.resource.data.senderId == request.auth.uid;
    }
    
    // Reports collection rules
    match /reports/{reportId} {
      // Users can create reports if they are the reporter
      allow create: if request.auth != null && 
        request.resource.data.reporterId == request.auth.uid;
        
      // Only admins can read reports (implement admin check in a production app)
      allow read: if false;
    }
  }
} 